{"ast":null,"code":"import axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nconst API_URL = \"http://localhost:8080/product\";\nclass ProductService {\n  //首頁全部商品\n  getAll() {\n    return axios.get(\"http://localhost:8080/categories/new-arrivals\");\n  }\n\n  //上架商品\n  post(productData) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL + \"/add\", productData, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  //使用者個人商品\n  get() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    console.log(token);\n    return axios.get(API_URL + \"/profile\", {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  //商品頁面\n  //   getById(_id) {\n  //     let token;\n  //     if (localStorage.getItem(\"user\")) {\n  //       token = JSON.parse(localStorage.getItem(\"user\")).token;\n  //     } else {\n  //       token = \"\";\n  //     }\n  //     console.log(token);\n  //     return axios.get(API_URL + \"/\" + _id, {\n  //       headers: {\n  //         Authorization: token,\n  //       },\n  //     })\n  //   }\n  // }\n  //透過product_id商品\n  getById(_id) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/\" + _id, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  //編輯商品\n  editProduct(productId, updateItem) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.patch(API_URL + \"/profile/\" + productId, updateItem, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  search(keyword) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/search/\" + keyword, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  getCategory(category) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/categories/\" + category, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  //刪除刪品\n  delete(productId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + \"/profile/\" + productId, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n}\nexport default new ProductService();","map":{"version":3,"names":["axios","useNavigate","withRouter","API_URL","ProductService","getAll","get","post","productData","token","localStorage","getItem","JSON","parse","headers","Authorization","console","log","getById","_id","editProduct","productId","updateItem","patch","search","keyword","getCategory","category","delete"],"sources":["/Users/rui/Desktop/Shop/client/src/services/product-service.js"],"sourcesContent":["import axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nconst API_URL = \"http://localhost:8080/product\";\n\nclass ProductService {\n  //首頁全部商品\n  getAll() {\n    return axios.get(\"http://localhost:8080/categories/new-arrivals\");\n  }\n\n  //上架商品\n  post(productData) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL + \"/add\", productData, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n  //使用者個人商品\n  get() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    console.log(token);\n    return axios.get(API_URL + \"/profile\", {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n  //商品頁面\n  //   getById(_id) {\n  //     let token;\n  //     if (localStorage.getItem(\"user\")) {\n  //       token = JSON.parse(localStorage.getItem(\"user\")).token;\n  //     } else {\n  //       token = \"\";\n  //     }\n  //     console.log(token);\n  //     return axios.get(API_URL + \"/\" + _id, {\n  //       headers: {\n  //         Authorization: token,\n  //       },\n  //     })\n  //   }\n  // }\n  //透過product_id商品\n  getById(_id) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.get(API_URL + \"/\" + _id, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n  //編輯商品\n  editProduct(productId, updateItem) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.patch(\n      API_URL + \"/profile/\" + productId,\n      updateItem,\n\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n  }\n  search(keyword) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/search/\" + keyword, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n  getCategory(category) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/categories/\" + category, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n  //刪除刪品\n  delete(productId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + \"/profile/\" + productId, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n}\nexport default new ProductService();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}